{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\Probus Frontend\\\\probus--frontend\\\\src\\\\Component\\\\SearchBus.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import TransactionForm from './TransactionForm';\n\n// const SearchBus = () => {\n//     const [source, setSource] = useState('');\n//     const [destination, setDestination] = useState('');\n//     const [searchResults, setSearchResults] = useState([]);\n//     const [searchClick, setSearchClicked] = useState(false);\n//     const [error, setError] = useState('');\n//     const [errorMessage, setErrorMessage] = useState('');\n//     const [redirect, setRedirect] = useState(false);\n//     const [selectedBus, setSelectedBus] = useState(null);\n//     const [showResultsTable, setShowResultsTable] = useState(true);\n//     const handleSearch = () => {\n//       setError('');\n//       setSearchResults([]);\n//       setErrorMessage('Bus not found, ');\n\n//       axios\n//         .get(`http://localhost:8090/searchbus/${source}/${destination}`)\n//         .then((response) => {\n//           if (response.status === 404) {\n//             setError('');\n//           }\n//           return response.data;\n//         })\n//         .then((data) => {\n//           if (data.length === 0) {\n//             setError('');\n//           } else {\n//             setSearchResults(data);\n//           }\n//         })\n//         .catch((error) => {\n//           setError(error.message);\n//           console.error(error);\n//         });\n//       setSearchClicked(true);\n//     };\n\n//     const handleBooking = (bus) => {\n//         setSelectedBus(bus);\n//         setRedirect(true);\n//         setShowResultsTable(false); // Hide the search results table\n//       };\n\n//     const handleTransaction = (transactionModel) => {\n//       return axios\n//         .post('http://localhost:8090/maketransaction', transactionModel)\n//         .then((response) => {\n//           // Handle the response from the transaction endpoint\n//           console.log('Transaction successful:', response.data);\n//           return response.data;\n//         })\n//         .catch((error) => {\n//           // Handle errors if the transaction fails\n//           console.error('Transaction failed:', error);\n//           throw error;\n//         });\n//     };\n\n//     return (\n//     <div>\n//       <h1>Bus Search</h1>\n//       <input\n//       type=\"text\"\n//       placeholder=\"Source\"\n//       value={source}\n//       onChange={(e) => setSource(e.target.value)}\n//       />\n//       <input\n//       type=\"text\"\n//       placeholder=\"Destination\"\n//       value={destination}\n//       onChange={(e) => setDestination(e.target.value)}\n//       />\n//       <button onClick={handleSearch}>Search</button>\n//       {searchClick && (\n//         <div>\n//           {searchResults.length===0? (\n//             errorMessage && (\n//               <p className=\"error\"> {errorMessage} from {source} to {destination} </p>\n//             )\n//       ): (\n//       showResultsTable && ( \n//       <><h2> Search results</h2><table className='table table-striped table-bordered'>\n//                     <thead>\n//                       <tr>\n//                         <th>Number Plate</th>\n//                         <th>Bus Name</th>\n//                         <th>Capacity</th>\n//                         <th>Seat Price</th>\n//                         <th>Starting Time</th>\n//                         <th>Arrival Time</th>\n//                         <th>Duration</th>\n//                         <th>Booking</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                       {searchResults.map((bus) => (\n//                         <tr key={bus.numberPlate}>\n//                           <td>{bus.numberPlate}</td>\n//                           <td>{bus.busName}</td>\n//                           <td>{bus.capacity}</td>\n//                           <td>{bus.seatPrice}</td>\n//                           <td>{bus.startingTime}</td>\n//                           <td>{bus.arrivalTime}</td>\n//                           <td>{bus.duration}</td>\n//                           <td>\n//                             <button\n//                               className=\"btn btn-primary\"\n//                               onClick={() => handleBooking(bus)}\n//                             >Book\n//                             </button>\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table></>\n//           ))}\n//         </div>\n//       )}\n//     {redirect && selectedBus && (\n//       <TransactionForm bus={selectedBus} handleTransaction={handleTransaction} />\n//     )}\n//     </div>\n\n//     );\n\n// };\n\n// export default SearchBus;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Payment from './Payment';\nimport ReactDOM from 'react-dom/client';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SearchBus = () => {\n  _s();\n  const [source, setSource] = useState('');\n  const [destination, setDestination] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchClick, setSearchClicked] = useState(false);\n  const [error, setError] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const [selectedBus, setSelectedBus] = useState(null);\n  const [showResultsTable, setShowResultsTable] = useState(true);\n  const [noOfPassenger, setNoOfPassenger] = useState(1);\n  const [tripDate, setTripDate] = useState('');\n  const [email, setEmail] = useState('');\n  const [passengerList, setPassengerList] = useState([]);\n  const [totalPrice, setTotalPrice] = useState([]);\n  const [transactionDetails, setTransactionDetails] = useState(null);\n  const [data, setData] = useState([]);\n  const handleSearch = () => {\n    setError('');\n    setSearchResults([]);\n    setErrorMessage('Bus not found');\n    axios.get(`http://localhost:8090/searchbus/${source}/${destination}`).then(response => {\n      if (response.status === 404) {\n        setError('');\n      }\n      return response.data;\n    }).then(data => {\n      if (data.length === 0) {\n        setError('');\n      } else {\n        setSearchResults(data);\n      }\n    }).catch(error => {\n      setError(error.message);\n      console.error(error);\n    });\n    setSearchClicked(true);\n  };\n  const handleBooking = bus => {\n    setSelectedBus(bus);\n    setRedirect(true);\n    setShowResultsTable(false); // Hide the search results table\n  };\n\n  const handleTransaction = async transactionModel => {\n    try {\n      const response = await axios.post('http://localhost:8090/maketransaction', transactionModel);\n      // Handle the response from the transaction endpoint\n      console.log('Transaction successful:', response.data);\n      return response.data;\n    } catch (error) {\n      // Handle errors if the transaction fails\n      console.error('Transaction failed:', error);\n      throw error;\n    }\n  };\n  const handleSubmit = () => {\n    const transactionModel = {\n      numberPlate: selectedBus.numberPlate,\n      source: selectedBus.source,\n      destination: selectedBus.destination,\n      startingTime: selectedBus.startingTime,\n      noOfPassenger,\n      transactionId: 0,\n      // Assign a valid transaction ID if required\n      tripDate,\n      email,\n      passengerList\n      // totalPrice,\n    };\n\n    handleTransaction(transactionModel).then(response => {\n      // Handle the response from the transaction endpoint\n      const transactionDetails = response;\n      setTransactionDetails(transactionDetails);\n      const root = ReactDOM.createRoot(document.getElementById('root'));\n      root.render( /*#__PURE__*/_jsxDEV(Payment, {\n        transaction: transactionDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }, this));\n    }).catch(error => {\n      // Handle errors if the transaction fails\n      console.error('Transaction failed:', error);\n    });\n  };\n  const handlePassengerChange = (index, field, value) => {\n    const updatedPassengerList = [...passengerList];\n    if (!updatedPassengerList[index]) {\n      updatedPassengerList[index] = {};\n    }\n    updatedPassengerList[index][field] = value;\n    setPassengerList(updatedPassengerList);\n  };\n  const today = new Date(); // Get the current date\n  today.setHours(0, 0, 0, 0); // Set the time to midnight\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Bus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Source\",\n        value: source,\n        onChange: e => setSource(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Destination\",\n        value: destination,\n        onChange: e => setDestination(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mb-3\",\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), searchClick && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searchResults.length === 0 ? errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [errorMessage, \" from \", source, \" to \", destination]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 15\n      }, this) : showResultsTable && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Number Plate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Bus Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Capacity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Seat Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Starting Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Arrival Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Duration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Booking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: searchResults.map(bus => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: bus.numberPlate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bus.busName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bus.capacity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bus.seatPrice\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bus.startingTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bus.arrivalTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bus.duration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: () => handleBooking(bus),\n                  children: \"Book\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 25\n              }, this)]\n            }, bus.numberPlate, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this), redirect && selectedBus && /*#__PURE__*/_jsxDEV(TransactionForm, {\n      selectedBus: selectedBus,\n      noOfPassenger: noOfPassenger,\n      tripDate: tripDate,\n      email: email,\n      handlePassengerChange: handlePassengerChange,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBus, \"NnQm8asSQKAmPFtwHW96Bh73bvA=\");\n_c = SearchBus;\nexport default SearchBus;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import Payment from './Payment';\n// import ReactDOM from 'react-dom/client';\n// import DatePicker from 'react-datepicker';\n// import 'react-datepicker/dist/react-datepicker.css';\n\n// const SearchBus = () => {\n//   const [source, setSource] = useState('');\n//   const [destination, setDestination] = useState('');\n//   const [searchResults, setSearchResults] = useState([]);\n//   const [searchClick, setSearchClicked] = useState(false);\n//   const [error, setError] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const [redirect, setRedirect] = useState(false);\n//   const [selectedBus, setSelectedBus] = useState(null);\n//   const [showResultsTable, setShowResultsTable] = useState(true);\n//   const [noOfPassenger, setNoOfPassenger] = useState(1);\n//   const [tripDate, setTripDate] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [passengerList, setPassengerList] = useState([]);\n//   const [totalPrice, setTotalPrice] = useState([]);\n//   const [transactionDetails, setTransactionDetails] = useState(null);\n//   const [data, setData] = useState([]);\n//   const [renderData, setRenderData] = useState([]);\n\n//   const handleSearch = () => {\n//     setError('');\n//     setSearchResults([]);\n//     setErrorMessage('Bus not found');\n\n//     axios\n//       .get(`http://localhost:8090/searchbus/${source}/${destination}`)\n//       .then((response) => {\n//         if (response.status === 404) {\n//           setError('');\n//         }\n//         return response.data;\n//       })\n//       .then((data) => {\n//         if (data.length === 0) {\n//           setError('');\n//         } else {\n//           setSearchResults(data);\n//         }\n//       })\n//       .catch((error) => {\n//         setError(error.message);\n//         console.error(error);\n//       });\n//     setSearchClicked(true);\n//   };\n\n//   const handleBooking = (bus) => {\n//     setSelectedBus(bus);\n//     setRedirect(true);\n//     setShowResultsTable(false); // Hide the search results table\n//   };\n\n//   const handleTransaction = async (transactionModel) => {\n//     try {\n//       const response = await axios.post('http://localhost:8090/maketransaction', transactionModel);\n//       // Handle the response from the transaction endpoint\n//       console.log('Transaction successful:', response.data);\n//       setData(response.data); // Return the response data\n//     } catch (error) {\n//       // Handle errors if the transaction fails\n//       console.error('Transaction failed:', error);\n//       throw error;\n//     }\n//   };\n\n//   const handleSubmit = () => {\n//     const transactionModel = {\n//       numberPlate: selectedBus.numberPlate,\n//       source: selectedBus.source,\n//       destination: selectedBus.destination,\n//       startingTime: selectedBus.startingTime,\n//       noOfPassenger,\n//       transactionId: 0, // Assign a valid transaction ID if required\n//       tripDate,\n//       email,\n//       passengerList,\n//       // totalPrice,\n//     };\n//     handleTransaction(transactionModel)\n//       .then((response) => {\n//         // Handle the response from the transaction endpoint\n//         const transactionDetails = response.data;\n//         setTransactionDetails(transactionDetails);\n//         // const root = ReactDOM.createRoot(document.getElementById('root'));\n//         // root.render(<Payment transaction={transactionDetails} />);\n//       })\n//       .catch((error) => {\n//         // Handle errors if the transaction fails\n//         console.error('Transaction failed:', error);\n//       });\n//   };\n\n//   useEffect(() => {\n//     setRenderData(data);\n//   }, [data]);\n\n//   const handlePassengerChange = (index, field, value) => {\n//     const updatedPassengerList = [...passengerList];\n//     if (!updatedPassengerList[index]) {\n//       updatedPassengerList[index] = {};\n//     }\n//     updatedPassengerList[index][field] = value;\n//     setPassengerList(updatedPassengerList);\n//   };\n\n//   const today = new Date(); // Get the current date\n//   today.setHours(0, 0, 0, 0); // Set the time to midnight\n\n//   return (\n//     <div className=\"container\" >\n//       <h1>Search Bus</h1>\n//       <div className=\"form-group mb-3\">\n//         <input\n//           type=\"text\"\n//           className=\"form-control\"\n//           placeholder=\"Source\"\n//           value={source}\n//           onChange={(e) => setSource(e.target.value)}\n//         />\n//       </div>\n//       <div className=\"form-group mb-3\">\n//         <input\n//           type=\"text\"\n//           className=\"form-control\"\n//           placeholder=\"Destination\"\n//           value={destination}\n//           onChange={(e) => setDestination(e.target.value)}\n//         />\n//       </div>\n//       <button className=\"btn btn-primary mb-3\" onClick={handleSearch}>\n//         Search\n//       </button>\n//       {searchClick && (\n//         <div>\n//           {searchResults.length === 0 ? (\n//             errorMessage && (\n//               <p className=\"error\">\n//                 {errorMessage} from {source} to {destination}\n//               </p>\n//             )\n//           ) : (\n//             showResultsTable && (\n//               <>\n//                 <h2>Search results</h2>\n//                 <table className=\"table table-striped table-bordered\">\n//                   <thead>\n//                     <tr>\n//                       <th>Number Plate</th>\n//                       <th>Bus Name</th>\n//                       <th>Capacity</th>\n//                       <th>Seat Price</th>\n//                       <th>Starting Time</th>\n//                       <th>Arrival Time</th>\n//                       <th>Duration</th>\n//                       <th>Booking</th>\n//                     </tr>\n//                   </thead>\n//                   <tbody>\n//                     {searchResults.map((bus) => (\n//                       <tr key={bus.numberPlate}>\n//                         <td>{bus.numberPlate}</td>\n//                         <td>{bus.busName}</td>\n//                         <td>{bus.capacity}</td>\n//                         <td>{bus.seatPrice}</td>\n//                         <td>{bus.startingTime}</td>\n//                         <td>{bus.arrivalTime}</td>\n//                         <td>{bus.duration}</td>\n//                         <td>\n//                           <button\n//                             className=\"btn btn-primary\"\n//                             onClick={() => handleBooking(bus)}\n//                           >\n//                             Book\n//                           </button>\n//                         </td>\n//                       </tr>\n//                     ))}\n//                   </tbody>\n//                 </table>\n//               </>\n//             )\n//           )}\n//         </div>\n//       )}\n//       {redirect && selectedBus && (\n//         <div style={{ overflowY: 'auto', maxHeight: '500px' }}>\n//   <h2>Transaction Form</h2>\n//   <div className=\"form-group\" style={{ overflowY: 'auto', maxHeight: '500px' }}>\n//     <label>Number Plate:</label>\n//     <input\n//       type=\"text\"\n//       className=\"form-control\"\n//       value={selectedBus.numberPlate}\n//       disabled\n//     />\n//   </div>\n//   <div className=\"form-group\">\n//     <label>Source:</label>\n//     <input\n//       type=\"text\"\n//       className=\"form-control\"\n//       value={selectedBus.source}\n//       disabled\n//     />\n//   </div>\n//   <div className=\"form-group\">\n//     <label>Destination:</label>\n//     <input\n//       type=\"text\"\n//       className=\"form-control\"\n//       value={selectedBus.destination}\n//       disabled\n//     />\n//   </div>\n//   <div className=\"form-group\">\n//     <label>Starting Time:</label>\n//     <input\n//       type=\"text\"\n//       className=\"form-control\"\n//       value={selectedBus.startingTime}\n//       disabled\n//     />\n//   </div>\n//   <div className=\"form-group\">\n//     <label>No. of Passengers:</label>\n//     <input\n//       type=\"number\"\n//       className=\"form-control\"\n//       value={noOfPassenger}\n//       onChange={(e) => setNoOfPassenger(parseInt(e.target.value))}\n//     />\n//   </div>\n//   <div className=\"form-group\">\n//     <label>Trip Date:</label>\n//     <DatePicker\n//       selected={tripDate}\n//       onChange={(date) => setTripDate(date)}\n//       minDate={today}\n//       className=\"form-control\"\n//     />\n//   </div>\n//   <div className=\"form-group\">\n//     <label>Email:</label>\n//     <input\n//       type=\"text\"\n//       className=\"form-control\"\n//       value={email}\n//       onChange={(e) => setEmail(e.target.value)}\n//     />\n//   </div>\n//   <div className='form-group' style={{ overflowY: 'auto', maxHeight: '300px' }}>\n//     {Array.from({ length: noOfPassenger }).map((_, index) => (\n//       <div key={index}>\n//         <h3>Passenger {index + 1}</h3>\n//         <div className=\"form-group\">\n//           <label>Name:</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             value={passengerList[index]?.passengerName || ''}\n//             onChange={(e) =>\n//               handlePassengerChange(index, 'passengerName', e.target.value)\n//             }\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label>Age:</label>\n//           <input\n//             type=\"number\"\n//             className=\"form-control\"\n//             value={passengerList[index]?.passengerAge || ''}\n//             onChange={(e) =>\n//               handlePassengerChange(index, 'passengerAge', parseInt(e.target.value))\n//             }\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label>Gender:</label>\n//           <select\n//             className=\"form-control\"\n//             value={passengerList[index]?.passengerGender || ''}\n//             onChange={(e) =>\n//               handlePassengerChange(index, 'passengerGender', e.target.value)\n//             }\n//           >\n//             <option value=\"\">Select Gender</option>\n//             <option value=\"Male\">Male</option>\n//             <option value=\"Female\">Female</option>\n//             <option value=\"Other\">Other</option>\n//           </select>\n//         </div>\n//       </div>\n//     ))}\n//   </div>\n//   <button className=\"btn btn-primary\" onClick={handleSubmit}>\n//     Submit\n//   </button>\n//   {renderData.map((transaction) =>(\n//     <tr key={transaction.transactionId}>\n//       <td>{transaction.totalPrice}</td>\n//       <td>{transaction.discount}</td>\n//     </tr>\n//   ))}\n\n// </div>\n\n//       )}\n//     </div>\n//   );\n// };\n\n// export default SearchBus;\nvar _c;\n$RefreshReg$(_c, \"SearchBus\");","map":{"version":3,"names":["React","useState","useEffect","axios","Payment","ReactDOM","DatePicker","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchBus","_s","source","setSource","destination","setDestination","searchResults","setSearchResults","searchClick","setSearchClicked","error","setError","errorMessage","setErrorMessage","redirect","setRedirect","selectedBus","setSelectedBus","showResultsTable","setShowResultsTable","noOfPassenger","setNoOfPassenger","tripDate","setTripDate","email","setEmail","passengerList","setPassengerList","totalPrice","setTotalPrice","transactionDetails","setTransactionDetails","data","setData","handleSearch","get","then","response","status","length","catch","message","console","handleBooking","bus","handleTransaction","transactionModel","post","log","handleSubmit","numberPlate","startingTime","transactionId","root","createRoot","document","getElementById","render","transaction","fileName","_jsxFileName","lineNumber","columnNumber","handlePassengerChange","index","field","value","updatedPassengerList","today","Date","setHours","className","children","type","placeholder","onChange","e","target","onClick","map","busName","capacity","seatPrice","arrivalTime","duration","TransactionForm","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Desktop/Probus Frontend/probus--frontend/src/Component/SearchBus.jsx"],"sourcesContent":["\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import TransactionForm from './TransactionForm';\r\n\r\n// const SearchBus = () => {\r\n//     const [source, setSource] = useState('');\r\n//     const [destination, setDestination] = useState('');\r\n//     const [searchResults, setSearchResults] = useState([]);\r\n//     const [searchClick, setSearchClicked] = useState(false);\r\n//     const [error, setError] = useState('');\r\n//     const [errorMessage, setErrorMessage] = useState('');\r\n//     const [redirect, setRedirect] = useState(false);\r\n//     const [selectedBus, setSelectedBus] = useState(null);\r\n//     const [showResultsTable, setShowResultsTable] = useState(true);\r\n//     const handleSearch = () => {\r\n//       setError('');\r\n//       setSearchResults([]);\r\n//       setErrorMessage('Bus not found, ');\r\n    \r\n//       axios\r\n//         .get(`http://localhost:8090/searchbus/${source}/${destination}`)\r\n//         .then((response) => {\r\n//           if (response.status === 404) {\r\n//             setError('');\r\n//           }\r\n//           return response.data;\r\n//         })\r\n//         .then((data) => {\r\n//           if (data.length === 0) {\r\n//             setError('');\r\n//           } else {\r\n//             setSearchResults(data);\r\n//           }\r\n//         })\r\n//         .catch((error) => {\r\n//           setError(error.message);\r\n//           console.error(error);\r\n//         });\r\n//       setSearchClicked(true);\r\n//     };\r\n    \r\n//     const handleBooking = (bus) => {\r\n//         setSelectedBus(bus);\r\n//         setRedirect(true);\r\n//         setShowResultsTable(false); // Hide the search results table\r\n//       };\r\n    \r\n//     const handleTransaction = (transactionModel) => {\r\n//       return axios\r\n//         .post('http://localhost:8090/maketransaction', transactionModel)\r\n//         .then((response) => {\r\n//           // Handle the response from the transaction endpoint\r\n//           console.log('Transaction successful:', response.data);\r\n//           return response.data;\r\n//         })\r\n//         .catch((error) => {\r\n//           // Handle errors if the transaction fails\r\n//           console.error('Transaction failed:', error);\r\n//           throw error;\r\n//         });\r\n//     };\r\n    \r\n\r\n//     return (\r\n//     <div>\r\n//       <h1>Bus Search</h1>\r\n//       <input\r\n//       type=\"text\"\r\n//       placeholder=\"Source\"\r\n//       value={source}\r\n//       onChange={(e) => setSource(e.target.value)}\r\n//       />\r\n//       <input\r\n//       type=\"text\"\r\n//       placeholder=\"Destination\"\r\n//       value={destination}\r\n//       onChange={(e) => setDestination(e.target.value)}\r\n//       />\r\n//       <button onClick={handleSearch}>Search</button>\r\n//       {searchClick && (\r\n//         <div>\r\n//           {searchResults.length===0? (\r\n//             errorMessage && (\r\n//               <p className=\"error\"> {errorMessage} from {source} to {destination} </p>\r\n//             )\r\n//       ): (\r\n//       showResultsTable && ( \r\n//       <><h2> Search results</h2><table className='table table-striped table-bordered'>\r\n//                     <thead>\r\n//                       <tr>\r\n//                         <th>Number Plate</th>\r\n//                         <th>Bus Name</th>\r\n//                         <th>Capacity</th>\r\n//                         <th>Seat Price</th>\r\n//                         <th>Starting Time</th>\r\n//                         <th>Arrival Time</th>\r\n//                         <th>Duration</th>\r\n//                         <th>Booking</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                       {searchResults.map((bus) => (\r\n//                         <tr key={bus.numberPlate}>\r\n//                           <td>{bus.numberPlate}</td>\r\n//                           <td>{bus.busName}</td>\r\n//                           <td>{bus.capacity}</td>\r\n//                           <td>{bus.seatPrice}</td>\r\n//                           <td>{bus.startingTime}</td>\r\n//                           <td>{bus.arrivalTime}</td>\r\n//                           <td>{bus.duration}</td>\r\n//                           <td>\r\n//                             <button\r\n//                               className=\"btn btn-primary\"\r\n//                               onClick={() => handleBooking(bus)}\r\n//                             >Book\r\n//                             </button>\r\n//                           </td>\r\n//                         </tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                   </table></>\r\n//           ))}\r\n//         </div>\r\n//       )}\r\n//     {redirect && selectedBus && (\r\n//       <TransactionForm bus={selectedBus} handleTransaction={handleTransaction} />\r\n//     )}\r\n//     </div>\r\n\r\n//     );\r\n\r\n\r\n\r\n// };\r\n\r\n// export default SearchBus;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Payment from './Payment';\r\nimport ReactDOM from 'react-dom/client';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst SearchBus = () => {\r\n  const [source, setSource] = useState('');\r\n  const [destination, setDestination] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchClick, setSearchClicked] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [selectedBus, setSelectedBus] = useState(null);\r\n  const [showResultsTable, setShowResultsTable] = useState(true);\r\n  const [noOfPassenger, setNoOfPassenger] = useState(1);\r\n  const [tripDate, setTripDate] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [passengerList, setPassengerList] = useState([]);\r\n  const [totalPrice, setTotalPrice] = useState([]);\r\n  const [transactionDetails, setTransactionDetails] = useState(null);\r\n  const [data, setData] = useState([]);\r\n\r\n  const handleSearch = () => {\r\n    setError('');\r\n    setSearchResults([]);\r\n    setErrorMessage('Bus not found');\r\n\r\n    axios\r\n      .get(`http://localhost:8090/searchbus/${source}/${destination}`)\r\n      .then((response) => {\r\n        if (response.status === 404) {\r\n          setError('');\r\n        }\r\n        return response.data;\r\n      })\r\n      .then((data) => {\r\n        if (data.length === 0) {\r\n          setError('');\r\n        } else {\r\n          setSearchResults(data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n        console.error(error);\r\n      });\r\n    setSearchClicked(true);\r\n  };\r\n\r\n  const handleBooking = (bus) => {\r\n    setSelectedBus(bus);\r\n    setRedirect(true);\r\n    setShowResultsTable(false); // Hide the search results table\r\n  };\r\n\r\n  const handleTransaction = async (transactionModel) => {\r\n    try {\r\n      const response = await axios\r\n        .post('http://localhost:8090/maketransaction', transactionModel);\r\n      // Handle the response from the transaction endpoint\r\n      console.log('Transaction successful:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      // Handle errors if the transaction fails\r\n      console.error('Transaction failed:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const transactionModel = {\r\n      numberPlate: selectedBus.numberPlate,\r\n      source: selectedBus.source,\r\n      destination: selectedBus.destination,\r\n      startingTime: selectedBus.startingTime,\r\n      noOfPassenger,\r\n      transactionId: 0, // Assign a valid transaction ID if required\r\n      tripDate,\r\n      email,\r\n      passengerList,\r\n      // totalPrice,\r\n    };\r\n\r\n    handleTransaction(transactionModel)\r\n      .then((response) => {\r\n        // Handle the response from the transaction endpoint\r\n        const transactionDetails = response;\r\n        setTransactionDetails(transactionDetails);\r\n        const root = ReactDOM.createRoot(document.getElementById('root'));\r\n        root.render(<Payment transaction={transactionDetails} />);\r\n      })\r\n      .catch((error) => {\r\n        // Handle errors if the transaction fails\r\n        console.error('Transaction failed:', error);\r\n      });\r\n  };\r\n\r\n  const handlePassengerChange = (index, field, value) => {\r\n    const updatedPassengerList = [...passengerList];\r\n    if (!updatedPassengerList[index]) {\r\n      updatedPassengerList[index] = {};\r\n    }\r\n    updatedPassengerList[index][field] = value;\r\n    setPassengerList(updatedPassengerList);\r\n  };\r\n\r\n  const today = new Date(); // Get the current date\r\n  today.setHours(0, 0, 0, 0); // Set the time to midnight\r\n\r\n  return (\r\n    <div className=\"container\" >\r\n      <h1>Search Bus</h1>\r\n      <div className=\"form-group mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Source\"\r\n          value={source}\r\n          onChange={(e) => setSource(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Destination\"\r\n          value={destination}\r\n          onChange={(e) => setDestination(e.target.value)}\r\n        />\r\n      </div>\r\n      <button className=\"btn btn-primary mb-3\" onClick={handleSearch}>\r\n        Search\r\n      </button>\r\n      {searchClick && (\r\n        <div>\r\n          {searchResults.length === 0 ? (\r\n            errorMessage && (\r\n              <p className=\"error\">\r\n                {errorMessage} from {source} to {destination}\r\n              </p>\r\n            )\r\n          ) : (\r\n            showResultsTable && (\r\n              <>\r\n                <h2>Search results</h2>\r\n                <table className=\"table table-striped table-bordered\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Number Plate</th>\r\n                      <th>Bus Name</th>\r\n                      <th>Capacity</th>\r\n                      <th>Seat Price</th>\r\n                      <th>Starting Time</th>\r\n                      <th>Arrival Time</th>\r\n                      <th>Duration</th>\r\n                      <th>Booking</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {searchResults.map((bus) => (\r\n                      <tr key={bus.numberPlate}>\r\n                        <td>{bus.numberPlate}</td>\r\n                        <td>{bus.busName}</td>\r\n                        <td>{bus.capacity}</td>\r\n                        <td>{bus.seatPrice}</td>\r\n                        <td>{bus.startingTime}</td>\r\n                        <td>{bus.arrivalTime}</td>\r\n                        <td>{bus.duration}</td>\r\n                        <td>\r\n                          <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={() => handleBooking(bus)}\r\n                          >\r\n                            Book\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </>\r\n            )\r\n          )}\r\n        </div>\r\n      )}\r\n      {redirect && selectedBus && (\r\n  <TransactionForm\r\n    selectedBus={selectedBus}\r\n    noOfPassenger={noOfPassenger}\r\n    tripDate={tripDate}\r\n    email={email}\r\n    handlePassengerChange={handlePassengerChange}\r\n    handleSubmit={handleSubmit}\r\n  />\r\n)}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBus;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import Payment from './Payment';\r\n// import ReactDOM from 'react-dom/client';\r\n// import DatePicker from 'react-datepicker';\r\n// import 'react-datepicker/dist/react-datepicker.css';\r\n\r\n// const SearchBus = () => {\r\n//   const [source, setSource] = useState('');\r\n//   const [destination, setDestination] = useState('');\r\n//   const [searchResults, setSearchResults] = useState([]);\r\n//   const [searchClick, setSearchClicked] = useState(false);\r\n//   const [error, setError] = useState('');\r\n//   const [errorMessage, setErrorMessage] = useState('');\r\n//   const [redirect, setRedirect] = useState(false);\r\n//   const [selectedBus, setSelectedBus] = useState(null);\r\n//   const [showResultsTable, setShowResultsTable] = useState(true);\r\n//   const [noOfPassenger, setNoOfPassenger] = useState(1);\r\n//   const [tripDate, setTripDate] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [passengerList, setPassengerList] = useState([]);\r\n//   const [totalPrice, setTotalPrice] = useState([]);\r\n//   const [transactionDetails, setTransactionDetails] = useState(null);\r\n//   const [data, setData] = useState([]);\r\n//   const [renderData, setRenderData] = useState([]);\r\n\r\n\r\n//   const handleSearch = () => {\r\n//     setError('');\r\n//     setSearchResults([]);\r\n//     setErrorMessage('Bus not found');\r\n\r\n//     axios\r\n//       .get(`http://localhost:8090/searchbus/${source}/${destination}`)\r\n//       .then((response) => {\r\n//         if (response.status === 404) {\r\n//           setError('');\r\n//         }\r\n//         return response.data;\r\n//       })\r\n//       .then((data) => {\r\n//         if (data.length === 0) {\r\n//           setError('');\r\n//         } else {\r\n//           setSearchResults(data);\r\n//         }\r\n//       })\r\n//       .catch((error) => {\r\n//         setError(error.message);\r\n//         console.error(error);\r\n//       });\r\n//     setSearchClicked(true);\r\n//   };\r\n\r\n//   const handleBooking = (bus) => {\r\n//     setSelectedBus(bus);\r\n//     setRedirect(true);\r\n//     setShowResultsTable(false); // Hide the search results table\r\n//   };\r\n\r\n//   const handleTransaction = async (transactionModel) => {\r\n//     try {\r\n//       const response = await axios.post('http://localhost:8090/maketransaction', transactionModel);\r\n//       // Handle the response from the transaction endpoint\r\n//       console.log('Transaction successful:', response.data);\r\n//       setData(response.data); // Return the response data\r\n//     } catch (error) {\r\n//       // Handle errors if the transaction fails\r\n//       console.error('Transaction failed:', error);\r\n//       throw error;\r\n//     }\r\n//   };\r\n  \r\n//   const handleSubmit = () => {\r\n//     const transactionModel = {\r\n//       numberPlate: selectedBus.numberPlate,\r\n//       source: selectedBus.source,\r\n//       destination: selectedBus.destination,\r\n//       startingTime: selectedBus.startingTime,\r\n//       noOfPassenger,\r\n//       transactionId: 0, // Assign a valid transaction ID if required\r\n//       tripDate,\r\n//       email,\r\n//       passengerList,\r\n//       // totalPrice,\r\n//     };\r\n//     handleTransaction(transactionModel)\r\n//       .then((response) => {\r\n//         // Handle the response from the transaction endpoint\r\n//         const transactionDetails = response.data;\r\n//         setTransactionDetails(transactionDetails);\r\n//         // const root = ReactDOM.createRoot(document.getElementById('root'));\r\n//         // root.render(<Payment transaction={transactionDetails} />);\r\n//       })\r\n//       .catch((error) => {\r\n//         // Handle errors if the transaction fails\r\n//         console.error('Transaction failed:', error);\r\n//       });\r\n//   };\r\n  \r\n  \r\n\r\n\r\n//   useEffect(() => {\r\n//     setRenderData(data);\r\n//   }, [data]);\r\n  \r\n\r\n//   const handlePassengerChange = (index, field, value) => {\r\n//     const updatedPassengerList = [...passengerList];\r\n//     if (!updatedPassengerList[index]) {\r\n//       updatedPassengerList[index] = {};\r\n//     }\r\n//     updatedPassengerList[index][field] = value;\r\n//     setPassengerList(updatedPassengerList);\r\n//   };\r\n\r\n//   const today = new Date(); // Get the current date\r\n//   today.setHours(0, 0, 0, 0); // Set the time to midnight\r\n\r\n//   return (\r\n//     <div className=\"container\" >\r\n//       <h1>Search Bus</h1>\r\n//       <div className=\"form-group mb-3\">\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"form-control\"\r\n//           placeholder=\"Source\"\r\n//           value={source}\r\n//           onChange={(e) => setSource(e.target.value)}\r\n//         />\r\n//       </div>\r\n//       <div className=\"form-group mb-3\">\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"form-control\"\r\n//           placeholder=\"Destination\"\r\n//           value={destination}\r\n//           onChange={(e) => setDestination(e.target.value)}\r\n//         />\r\n//       </div>\r\n//       <button className=\"btn btn-primary mb-3\" onClick={handleSearch}>\r\n//         Search\r\n//       </button>\r\n//       {searchClick && (\r\n//         <div>\r\n//           {searchResults.length === 0 ? (\r\n//             errorMessage && (\r\n//               <p className=\"error\">\r\n//                 {errorMessage} from {source} to {destination}\r\n//               </p>\r\n//             )\r\n//           ) : (\r\n//             showResultsTable && (\r\n//               <>\r\n//                 <h2>Search results</h2>\r\n//                 <table className=\"table table-striped table-bordered\">\r\n//                   <thead>\r\n//                     <tr>\r\n//                       <th>Number Plate</th>\r\n//                       <th>Bus Name</th>\r\n//                       <th>Capacity</th>\r\n//                       <th>Seat Price</th>\r\n//                       <th>Starting Time</th>\r\n//                       <th>Arrival Time</th>\r\n//                       <th>Duration</th>\r\n//                       <th>Booking</th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody>\r\n//                     {searchResults.map((bus) => (\r\n//                       <tr key={bus.numberPlate}>\r\n//                         <td>{bus.numberPlate}</td>\r\n//                         <td>{bus.busName}</td>\r\n//                         <td>{bus.capacity}</td>\r\n//                         <td>{bus.seatPrice}</td>\r\n//                         <td>{bus.startingTime}</td>\r\n//                         <td>{bus.arrivalTime}</td>\r\n//                         <td>{bus.duration}</td>\r\n//                         <td>\r\n//                           <button\r\n//                             className=\"btn btn-primary\"\r\n//                             onClick={() => handleBooking(bus)}\r\n//                           >\r\n//                             Book\r\n//                           </button>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))}\r\n//                   </tbody>\r\n//                 </table>\r\n//               </>\r\n//             )\r\n//           )}\r\n//         </div>\r\n//       )}\r\n//       {redirect && selectedBus && (\r\n//         <div style={{ overflowY: 'auto', maxHeight: '500px' }}>\r\n//   <h2>Transaction Form</h2>\r\n//   <div className=\"form-group\" style={{ overflowY: 'auto', maxHeight: '500px' }}>\r\n//     <label>Number Plate:</label>\r\n//     <input\r\n//       type=\"text\"\r\n//       className=\"form-control\"\r\n//       value={selectedBus.numberPlate}\r\n//       disabled\r\n//     />\r\n//   </div>\r\n//   <div className=\"form-group\">\r\n//     <label>Source:</label>\r\n//     <input\r\n//       type=\"text\"\r\n//       className=\"form-control\"\r\n//       value={selectedBus.source}\r\n//       disabled\r\n//     />\r\n//   </div>\r\n//   <div className=\"form-group\">\r\n//     <label>Destination:</label>\r\n//     <input\r\n//       type=\"text\"\r\n//       className=\"form-control\"\r\n//       value={selectedBus.destination}\r\n//       disabled\r\n//     />\r\n//   </div>\r\n//   <div className=\"form-group\">\r\n//     <label>Starting Time:</label>\r\n//     <input\r\n//       type=\"text\"\r\n//       className=\"form-control\"\r\n//       value={selectedBus.startingTime}\r\n//       disabled\r\n//     />\r\n//   </div>\r\n//   <div className=\"form-group\">\r\n//     <label>No. of Passengers:</label>\r\n//     <input\r\n//       type=\"number\"\r\n//       className=\"form-control\"\r\n//       value={noOfPassenger}\r\n//       onChange={(e) => setNoOfPassenger(parseInt(e.target.value))}\r\n//     />\r\n//   </div>\r\n//   <div className=\"form-group\">\r\n//     <label>Trip Date:</label>\r\n//     <DatePicker\r\n//       selected={tripDate}\r\n//       onChange={(date) => setTripDate(date)}\r\n//       minDate={today}\r\n//       className=\"form-control\"\r\n//     />\r\n//   </div>\r\n//   <div className=\"form-group\">\r\n//     <label>Email:</label>\r\n//     <input\r\n//       type=\"text\"\r\n//       className=\"form-control\"\r\n//       value={email}\r\n//       onChange={(e) => setEmail(e.target.value)}\r\n//     />\r\n//   </div>\r\n//   <div className='form-group' style={{ overflowY: 'auto', maxHeight: '300px' }}>\r\n//     {Array.from({ length: noOfPassenger }).map((_, index) => (\r\n//       <div key={index}>\r\n//         <h3>Passenger {index + 1}</h3>\r\n//         <div className=\"form-group\">\r\n//           <label>Name:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={passengerList[index]?.passengerName || ''}\r\n//             onChange={(e) =>\r\n//               handlePassengerChange(index, 'passengerName', e.target.value)\r\n//             }\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label>Age:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             className=\"form-control\"\r\n//             value={passengerList[index]?.passengerAge || ''}\r\n//             onChange={(e) =>\r\n//               handlePassengerChange(index, 'passengerAge', parseInt(e.target.value))\r\n//             }\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label>Gender:</label>\r\n//           <select\r\n//             className=\"form-control\"\r\n//             value={passengerList[index]?.passengerGender || ''}\r\n//             onChange={(e) =>\r\n//               handlePassengerChange(index, 'passengerGender', e.target.value)\r\n//             }\r\n//           >\r\n//             <option value=\"\">Select Gender</option>\r\n//             <option value=\"Male\">Male</option>\r\n//             <option value=\"Female\">Female</option>\r\n//             <option value=\"Other\">Other</option>\r\n//           </select>\r\n//         </div>\r\n//       </div>\r\n//     ))}\r\n//   </div>\r\n//   <button className=\"btn btn-primary\" onClick={handleSubmit}>\r\n//     Submit\r\n//   </button>\r\n//   {renderData.map((transaction) =>(\r\n//     <tr key={transaction.transactionId}>\r\n//       <td>{transaction.totalPrice}</td>\r\n//       <td>{transaction.discount}</td>\r\n//     </tr>\r\n//   ))}\r\n\r\n// </div>\r\n\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SearchBus;"],"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YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAgBpB,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,eACR;IAEL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,EACAhD,QAAQ,IAAIE,WAAW,iBAC5BnB,OAAA,CAACwF,eAAe;MACdrE,WAAW,EAAEA,WAAY;MACzBI,aAAa,EAAEA,aAAc;MAC7BE,QAAQ,EAAEA,QAAS;MACnBE,KAAK,EAAEA,KAAM;MACbuC,qBAAqB,EAAEA,qBAAsB;MAC7Cd,YAAY,EAAEA;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEQ,CAAC;AAEV,CAAC;AAAC7D,EAAA,CAlMID,SAAS;AAAAsF,EAAA,GAATtF,SAAS;AAoMf,eAAeA,SAAS;;AAGxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA,IAAAsF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}